apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
//apply plugin: 'com.neenbedankt.android-apt'

apply from: "$project.rootDir/tools/script-findbugs.gradle"
apply from: "$project.rootDir/tools/script-lint.gradle"
apply from: "$project.rootDir/tools/script-pmd.gradle"
apply from: "$project.rootDir/tools/script-java-code-coverage.gradle"

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "com.gm.goldencity"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.compileSdkVersion
        versionCode 1
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true
        dataBinding {
            enabled = true
        }

        def filesAuthorityValue = applicationId + ".shareprovider";
        buildConfigField "String", "FILES_AUTHORITY", "\"${filesAuthorityValue}\""
        manifestPlaceholders = [filesAuthority: filesAuthorityValue]

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            applicationIdSuffix '.debug'
            versionNameSuffix '-debug'

            // Run code coverage reports by default on debug builds.
            testCoverageEnabled true
        }
    }

    productFlavors {
        prod {
        }

        mock {
        }
    }

    dataBinding {
        enabled = true
    }

    lintOptions {
        abortOnError false
    }

    /* allow using java 8 lambda */
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    /* fixes espresso conflict with supportAnnotation and androidSupport new versions */
    configurations.all {
        resolutionStrategy {
            force rootProject.ext.testLibraries.supportAnnotations
            force rootProject.ext.libraries.androidSupport
            force rootProject.ext.libraries.appCompat
            force rootProject.ext.libraries.designSupport
            force rootProject.ext.libraries.gmrecyclerView
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    //Android Support
//    compile rootProject.ext.libraries.appCompat
//    compile rootProject.ext.libraries.designSupport
//    compile rootProject.ext.libraries.palette

    compile rootProject.ext.libraries.constrainLayout

    compile rootProject.ext.libraries.gmrecyclerView
    compile rootProject.ext.libraries.cardView

    //Log
    compile rootProject.ext.libraries.log
    //Rx Android
    compile rootProject.ext.libraries.rxandroid
    compile rootProject.ext.libraries.rxbinding
    //Image Library
    compile rootProject.ext.libraries.picasso
    //Butter Knife
    compile rootProject.ext.libraries.butterknife
    annotationProcessor rootProject.ext.aptLibraries.butterknifeCompiler
    // Dagger
    compile rootProject.ext.libraries.dagger
    annotationProcessor rootProject.ext.aptLibraries.daggerCompiler
    //androidTestApt rootProject.ext.aptLibraries.daggerCompiler

    // Testing
    testCompile rootProject.ext.testLibraries.junit
//    testCompile rootProject.ext.testLibraries.robolectric
//    androidTestCompile rootProject.ext.testLibraries.mockito
//    androidTestCompile rootProject.ext.testLibraries.dexmaker
//    androidTestCompile rootProject.ext.testLibraries.dexmakerMockito
//    androidTestCompile rootProject.ext.testLibraries.supportTestRunner
    androidTestCompile rootProject.ext.testLibraries.supportAnnotations
    androidTestCompile rootProject.ext.testLibraries.espresso
    androidTestCompile rootProject.ext.testLibraries.espressoContrib
    compile 'com.getkeepsafe.taptargetview:taptargetview:1.8.0'
    compile project(':goldencity-common')
    compile project(':goldencity-core')
}
